version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                APP_NAME: ${APP_NAME}
                APP_STAGE: ${APP_ENV}
        image: laravel-app
        container_name: laravel-app
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    webserver:
        image: nginx:alpine
        container_name: nginx-webserver
        restart: unless-stopped
        tty: true
        ports:
            - "81:80"
        volumes:
            - ./:/var/www
            - ./.docker/nginx/conf.d:/etc/nginx/conf.d
        networks:
            - app-network

    db:
        image: mysql:5.7
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3307:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - app-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: unless-stopped
        tty: true
        ports:
            - "82:80"
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - "6380:6379"
        networks:
            - app-network

    queue:
        build:
            context: .
            dockerfile: Dockerfile
        command: php /var/www/artisan queue:work --sleep=3 --tries=3
        volumes:
            - .:/var/www
        depends_on:
            - redis
        networks:
            - app-network

#    horizon:
#        container_name: horizon
#        build:
#            context: .
#            dockerfile: Dockerfile
#        command: php /var/www/artisan horizon
#        volumes:
#            - .:/var/www
#        depends_on:
#            - redis
#            - app
#        networks:
#            - app-network

#    node:
#        image: node:14
#        container_name: node
#        working_dir: /var/www
#        volumes:
#            - ./:/var/www
#        command: bash -c "npm install && npm run dev"
#        networks:
#            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
